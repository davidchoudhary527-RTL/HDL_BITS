module Faddr(
    input a ,b ,cin,
    output sum , cout 
);
    assign sum = a ^ b ^ cin ;
    assign cout = a&b | a&cin | b&cin ;
endmodule
    

module top_module( 
    input [99:0] a, b,
    input cin,
    output [99:0] cout,
    output [99:0] sum );
    
    assign sum[0] = a[0] ^ b[0] ^ cin;
    assign cout[0] = a[0]&b[0] | a[0]&cin | b[0]&cin ;

    generate
        genvar i ;
        for ( i=1 ; i < $bits(sum) ; i++)
            begin : f_addr
                Faddr U_faddr
                (
                    .a(a[i]),
                    .b(b[i]),
                    .cin(cout[i-1]),
                    .sum(sum[i]),
                    .cout(cout[i])
                );
            end
    endgenerate  
    
endmodule
